{
  "description": "Asynchronous coding means writing code in such a way that our app will keep working while a long task, like loading a model, is running. Here, we cover the different ways we can do this in JavaScript.",
  "title": "Asynchronous JavaScript",
    "wordCount": "7859",
    "readingTime": "37",
  "IDE": {
    "show": "true",
    "container": "#ide-wrapper",
    "serverDirectory": "static/examples",
    "stripDirectory": "worlds/appendix/asynchronous-javascript/",
    "closedFolders": ["styles"],
    "comparisonMode": null,
    "files": ["worlds/appendix/asynchronous-javascript/src/1-asynchronous-callback.js","worlds/appendix/asynchronous-javascript/src/2-multiple-asynchronous-callbacks.js","worlds/appendix/asynchronous-javascript/src/3-promises.js","worlds/appendix/asynchronous-javascript/src/4-multiple-promises.js","worlds/appendix/asynchronous-javascript/src/5-multiple-promises-handle-error.js","worlds/appendix/asynchronous-javascript/src/6-async-functions.js","worlds/appendix/asynchronous-javascript/src/7-multiple-async-functions.js","worlds/appendix/asynchronous-javascript/index.html"],
    "startFiles": null,
    "finalFiles": null,
    "entry": "index.html",
    "activeDocument":"src/6-async-functions.js",
    "switchImportsAllow": "false"
  },
  "membershipLevelToView": "none",
  "includeInSitemap" : true,
  "showUpdateBanner" : true,
  "showPagination" : true
}
